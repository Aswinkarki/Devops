# services:
#   db:
#     image: postgres:17
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     environment:
#       POSTGRES_DB: Library
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: Aswin
#     ports:
#       - "5432:5432"

#   api:
#     build:
#       context: ../LMS
#       dockerfile: ../devOps/Dockerfile.backend
#     command: ["python", "/myproject/manage.py", "runserver", "0.0.0.0:8000"]
#     volumes:
#       - ../LMS/myproject:/myproject
#     working_dir: /myproject
#     ports:
#       - "5000:8000"
#     depends_on:
#       - db
#     environment:
#       - DJANGO_SETTINGS_MODULE=myproject.settings
#       - DB_NAME=Library
#       - DB_USER=postgres
#       - DB_PASSWORD=Aswin
#       - DB_HOST=db
#       - DB_PORT=5432

#   frontend:
#     build:
#       context: ..
#       dockerfile: devOps/Dockerfile.frontend
#     ports:
#       - "5001:80"
#     depends_on:
#       - api

# volumes:
#   postgres_data:
version: "3.9"

services:
  api:
    build:
      context: ..
      dockerfile: devOps/dockerfile.backend
    container_name: lms_api
    volumes:
      - ../LMS:/app
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    build:
      context: ..
      dockerfile: devOps/dockerfile.frontend
    container_name: lms_frontend
    volumes:
      - ../LMS-React/frontend:/app
    working_dir: /app
    command: sh -c "npm install && npm run build"

  nginx:
    image: nginx:stable
    container_name: nginx_gateway
    ports:
      - "80:80"
    depends_on:
      - frontend
      - api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../LMS-React/frontend/dist:/usr/share/nginx/html

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: lms_db
      POSTGRES_USER: lms_user
      POSTGRES_PASSWORD: lms_pass
    ports:
      - "5432:5432"
